{"version":3,"sources":["components/Post/index.js","components/Post/Post.js","api/index.js","pages/App/index.js","pages/App/App.js","reportWebVitals.js","index.js","pages/App/App.module.scss","components/Post/Post.module.scss"],"names":["Post","author","title","body","cl","className","styles","post","charAt","toUpperCase","slice","getPosts","a","fetch","response","json","getUsers","App","useState","posts","setPosts","setAuthor","filteredPosts","setFilteredPosts","users","setUsers","useEffect","u","p","setData","length","regex","RegExp","authorsIds","filter","user","test","name","map","id","postsArray","includes","userId","wrapper","value","onChange","e","target","inputAuthor","type","placeholder","role","find","message","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.0addefbf.chunk.js","sourcesContent":["import Post from \"./Post\";\r\nexport default Post","import styles from './Post.module.scss'\r\n\r\nconst Post = ({author, title, body, cl}) => {\r\n  return <div className={`${styles.post} ${cl}`}>\r\n    <div>\r\n      <h3 className={styles.title}>{title.charAt(0).toUpperCase() + title.slice(1)}</h3>\r\n      <p>{body}</p>\r\n    </div>\r\n    <p className={styles.author}>{author}</p>\r\n  </div>\r\n};\r\n\r\nexport default Post;","export const getPosts = async () => {\r\n  const response = await fetch('https://jsonplaceholder.typicode.com/posts')\r\n  const json = await response.json()\r\n  return json\r\n}\r\nexport const getUsers = async () => {\r\n  const response = await fetch('https://jsonplaceholder.typicode.com/users')\r\n  const json = await response.json()\r\n  return json\r\n}","import App from \"./App\";\r\nexport default App","import styles from './App.module.scss'\nimport {useEffect, useState} from \"react\";\nimport Post from \"../../components/Post\";\nimport {getPosts, getUsers} from \"../../api\";\n\nconst App = () => {\n  const [posts, setPosts] = useState([]);\n  const [author, setAuthor] = useState('');\n  const [filteredPosts, setFilteredPosts] = useState([]);\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    const setData = async () => {\n      const u = await getUsers()\n      const p = await getPosts()\n      setPosts(p)\n      setUsers(u)\n    }\n    setData()\n  }, []);\n\n  useEffect(() => {\n    if (author.length > 0) {\n      let regex = new RegExp(author)\n      const filteredUsers = users.filter(user => !!regex.test(user.name))\n      const authorsIds = filteredUsers.map(user => user.id)\n      const postsArray = posts.filter(post => authorsIds.includes(post.userId))\n      setFilteredPosts(postsArray)\n    } else {\n      setFilteredPosts(posts)\n    }\n  }, [author, posts, users]);\n\n  const getAuthorNameById = (id) => {\n    return users.find(user => user.id === id)\n  }\n\n  return <div className={`container-lg ${styles.wrapper}`}>\n    <input value={author} onChange={(e => setAuthor(e.target.value))} className={`form-control ${styles.inputAuthor}`}\n           type=\"text\"\n           placeholder=\"Author\"/>\n    {posts.length === 0\n      ? <div className=\"spinner-border\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n      : <div className={styles.posts}>\n        {filteredPosts.length > 0 && users.length > 0\n          ? filteredPosts.map(post => (\n            <Post cl={styles.post} author={getAuthorNameById(post.userId).name} key={post.id} {...post} />\n          ))\n          : <h4 className={styles.message}>Posts haven't been defined</h4>}\n      </div>}\n  </div>\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './pages/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__Pcw7r\",\"inputAuthor\":\"App_inputAuthor__34DTw\",\"posts\":\"App_posts__2AL9D\",\"message\":\"App_message__22a61\",\"post\":\"App_post__1AQGz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__2jkr4\",\"title\":\"Post_title__1xoqI\",\"author\":\"Post_author__1J-yv\"};"],"sourceRoot":""}